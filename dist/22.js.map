{"version":3,"file":"22.js","mappings":"0LAMA,MAoBA,EApByBA,EAAGC,YAExBC,EAAAA,cAAA,OACEC,UAAY,0DAAyDF,GAAU,eAC/EG,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENN,EAAAA,cAAA,QACEO,SAAS,UACTC,SAAS,UACTC,EAAE,+TACFJ,KAAK,MCfPK,GAAqBC,EAAAA,EAAAA,KAAS,IAAM,gCA2B1C,EArBwBC,EAAGC,gBACzB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAkB,GAEtDC,GAAwBC,EAAAA,EAAAA,cAAaC,IACzCJ,GAAkBK,IAAUA,GAAK,GAChC,IAEH,OACEpB,EAAAA,cAAA,UACEA,EAAAA,cAAA,OACEC,UAAU,6HACVoB,QAASJ,GAERJ,EAAUS,KACXtB,EAAAA,cAACF,EAAgB,CAACC,OAAQe,KAE5Bd,EAAAA,cAACU,EAAkB,CAACY,KAAMT,EAAUU,IAAKxB,OAAQe,IAC9C,C","sources":["webpack://seller-supply-chain-front/./src/common/icon/DropDownArrowSvg.tsx","webpack://seller-supply-chain-front/./src/components/Sidebar/components/SidebarMenuItem.tsx"],"sourcesContent":["import React from 'react';\n\ninterface IProps {\n  isOpen: boolean;\n}\n\nconst DropDownArrowSvg = ({ isOpen }: IProps) => {\n  return (\n    <svg\n      className={`absolute right-4 top-1/2 -translate-y-1/2 fill-current ${isOpen && 'rotate-180'}`}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.41107 6.9107C4.73651 6.58527 5.26414 6.58527 5.58958 6.9107L10.0003 11.3214L14.4111 6.91071C14.7365 6.58527 15.2641 6.58527 15.5896 6.91071C15.915 7.23614 15.915 7.76378 15.5896 8.08922L10.5896 13.0892C10.2641 13.4147 9.73651 13.4147 9.41107 13.0892L4.41107 8.08922C4.08563 7.76378 4.08563 7.23614 4.41107 6.9107Z\"\n        fill=\"\"\n      />\n    </svg>\n  );\n};\n\nexport default DropDownArrowSvg;\n","import React, { useCallback, useState } from 'react';\nimport { IMenu } from '@src/interface/MenuInterface';\nimport loadable from '@loadable/component';\nimport DropDownArrowSvg from '@src/common/icon/DropDownArrowSvg';\n\nconst SidebarSubMenuItem = loadable(() => import('@src/components/Sidebar/components/SidebarSubMenuItem'));\n\ninterface ISideMenus {\n  mainMenus: IMenu;\n}\n\nconst SidebarMenuItem = ({ mainMenus }: ISideMenus) => {\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState<boolean>(false);\n\n  const onClickSubMenuHandler = useCallback((e: any) => {\n    setIsSubMenuOpen((prev) => !prev);\n  }, []);\n\n  return (\n    <li>\n      <div\n        className=\"relative flex items-center gap-2 rounded-sm px-4 py-2 font-medium text-gray-300 duration-300 ease-in-out hover:bg-gray-700\"\n        onClick={onClickSubMenuHandler}\n      >\n        {mainMenus.name}\n        <DropDownArrowSvg isOpen={isSubMenuOpen} />\n      </div>\n      <SidebarSubMenuItem name={mainMenus.key} isOpen={isSubMenuOpen} />\n    </li>\n  );\n};\n\nexport default SidebarMenuItem;\n"],"names":["DropDownArrowSvg","isOpen","React","className","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","SidebarSubMenuItem","loadable","SidebarMenuItem","mainMenus","isSubMenuOpen","setIsSubMenuOpen","useState","onClickSubMenuHandler","useCallback","e","prev","onClick","name","key"],"sourceRoot":""}